name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable]
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
      
      - name: Check formatting
        run: cargo fmt --all -- --check
      
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      
      - name: Run tests
        run: cargo test --all
      
      - name: Build
        run: cargo build --release

  layering:
    name: Check Architecture Layering
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      
      - name: Check layering
        run: ./scripts/check-layering.sh
      
      - name: Check nucleotide-types zero deps
        run: |
          cargo check -p nucleotide-types --no-default-features
          ! cargo tree -p nucleotide-types --no-default-features --edges normal | grep -E "(gpui|helix-core)"

  dependencies:
    name: Check Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      
      - name: Install cargo-deny
        run: cargo install cargo-deny
      
      - name: Check dependencies
        run: cargo deny check

  unused-deps:
    name: Check Unused Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
      
      - name: Install cargo-udeps
        run: cargo install cargo-udeps
      
      - name: Check for unused dependencies
        run: cargo +nightly udeps --all-targets --workspace