[workspace]
members = [
    "crates/nucleotide-types",
    "crates/nucleotide-events",
    "crates/nucleotide-logging",
    "crates/nucleotide-core",
    "crates/nucleotide-editor",
    "crates/nucleotide-ui",
    "crates/nucleotide-workspace",
    "crates/nucleotide-lsp",
    "crates/nucleotide-project",
    "crates/nucleotide-env",
    "crates/nucleotide-vcs",
    "crates/nucleotide",
]
resolver = "2"

[workspace.package]
version = "0.1.0"
authors = ["The Nucleotide Contributors"]
edition = "2024"
license = "GPL-3.0-or-later"
repository = "https://github.com/spiralpoint/nucleotide"
homepage = "https://github.com/spiralpoint/nucleotide"

[workspace.dependencies]
# GPUI and Zed dependencies - using v0.200.5 tag
gpui = { git = "https://github.com/zed-industries/zed", tag = "v0.200.5" }
gpui_tokio = { git = "https://github.com/zed-industries/zed", tag = "v0.200.5" }
sum_tree = { git = "https://github.com/zed-industries/zed", tag = "v0.200.5" }

# Helix dependencies  
helix-core = { git = "https://github.com/helix-editor/helix", tag = "25.07.1" }
helix-event = { git = "https://github.com/helix-editor/helix", tag = "25.07.1" }
helix-loader = { git = "https://github.com/helix-editor/helix", tag = "25.07.1" }
helix-lsp = { git = "https://github.com/helix-editor/helix", tag = "25.07.1" }
helix-term = { git = "https://github.com/helix-editor/helix", tag = "25.07.1" }
helix-tui = { git = "https://github.com/helix-editor/helix", tag = "25.07.1" }
helix-view = { git = "https://github.com/helix-editor/helix", tag = "25.07.1" }
helix-vcs = { git = "https://github.com/helix-editor/helix", tag = "25.07.1" }
helix-parsec = { git = "https://github.com/helix-editor/helix", tag = "25.07.1" }
helix-stdx = { git = "https://github.com/helix-editor/helix", tag = "25.07.1" }

# Common dependencies
tokio = { version = "1.32", features = ["full"] }
futures = "0.3"
futures-util = "0.3"
anyhow = "1.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.8"
env_logger = "0.11"
arc-swap = "1.7"
bitflags = "2.5"
notify = { version = "6.1", default-features = false, features = ["macos_fsevent"] }
which = "6.0"
regex = "1.10"
crossterm = { version = "0.29", features = ["event-stream", "use-dev-tty"] }
signal-hook = "0.3"
signal-hook-tokio = { version = "0.3", features = ["futures-v0_3"] }
libc = "0.2"
chardetng = "0.1"
ignore = "0.4"
once_cell = "1.19"
nucleo = "0.5"
parking_lot = "0.12"
tui = { package = "ratatui", version = "0.29", default-features = false, features = ["crossterm"] }
unicode-segmentation = "1.11"
unicode-width = "0.2.0"
url = "2.5"
tempfile = "3.10"
tree-sitter = "0.24"
chrono = { version = "0.4", default-features = false, features = ["clock"] }
smallvec = "1.13"
fern = "0.6"
ctor = "0.2"
tokio-stream = "0.1"
rust-embed = "8.5"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "fmt"] }
tracing-appender = "0.2"
dirs = "5.0"
thiserror = "1.0"
async-trait = "0.1"
rand = "0.8"
slotmap = "1.0"

# macOS framework bindings
objc = "0.2"
cocoa = "0.25"

# Inter-crate dependencies
nucleotide-types = { path = "crates/nucleotide-types" }
nucleotide-events = { path = "crates/nucleotide-events" }
nucleotide-logging = { path = "crates/nucleotide-logging" }
nucleotide-core = { path = "crates/nucleotide-core" }
nucleotide-editor = { path = "crates/nucleotide-editor" }
nucleotide-ui = { path = "crates/nucleotide-ui" }
nucleotide-workspace = { path = "crates/nucleotide-workspace" }
nucleotide-lsp = { path = "crates/nucleotide-lsp" }
nucleotide-project = { path = "crates/nucleotide-project" }
nucleotide-env = { path = "crates/nucleotide-env" }
nucleotide-vcs = { path = "crates/nucleotide-vcs" }

[profile.dev]
opt-level = 1
debug = "line-tables-only"  # Faster builds with minimal debug info
split-debuginfo = "unpacked"  # Faster linking on macOS
incremental = true

[profile.release]
opt-level = 3
lto = "thin"  # Much faster linking than "true", slightly larger binary
codegen-units = 1
strip = "debuginfo"
split-debuginfo = "packed"  # Faster linking on macOS
incremental = false  # Disable for release builds for maximum optimization